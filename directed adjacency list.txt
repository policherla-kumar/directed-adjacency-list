import java.util.*;
public class Main{
    public static void bfs(int[][]graph,int start){
        int n=graph.length;
        boolean[]visited=new boolean[n];
        Queue<Integer>Queue=new LinkedList<>();
        visited[start]=true;
        Queue.offer(start);
        while(!Queue.isEmpty()){
            int current=Queue.poll();
            System.out.print(current+" ");
            for(int neighbour=0;neighbour<n;neighbour++){
                if(graph[current][neighbour]==1&&!visited[neighbour]){
                    visited[neighbour]=true;
                    Queue.offer(neighbour);
                }
            }
        }
    }
    public static void main(String[]args){
        int[][]adjMatrix={
            {0,1,1,0},
            {1,0,0,1},
            {1,0,0,1},
            {0,1,1,0},
        };
        System.out.println("BFS starting from node 0:");
        bfs(adjMatrix,0);
        }
    }


   